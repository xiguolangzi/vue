1.安装 node 和 npm 包管理工具
  安装node会自带安装npm
  官网：https://nodejs.org/en 下载推荐版本（LTS版本）的安装程序。LTS代表长期支持版本，适合大多数用户
  傻瓜式安装
  检查安装结果：node -v , npm -v 可以查看版本号

2.安装 vue@cli
  命令：npm i @vue/cli -g
  查看安装版本号：vue --version

3.创建项目架子
  选择项目路径路径-> 创建项目 ：vue create project-name（项目名不能是中文）-> 选择vue版本 -> 选择yarn安装 -> 生成项目骨架

4.启动项目
  切换到项目路径 cd demo1 -> 启动项目npm run serve （找package.json）/ yarn serve
  启动命令中的'serve'不确定，根据package.json下的 scripts 下的 对应"vue-cli-service serve"的key 命名

5.项目结构
  node_modules        第三方包
  public              放html文件的地方
    -favicon.ico      网站图标
    -index.html       模板文件
  scr                 源代码目录
    -assets           静态资源目录
    -components       组件目录
    -App.vue          App根组件 - 项目运行看到的内容就在这里编写
    -main.js          入口文件
  .gitignore          git忽视文件
  babel.config.js     babel配置文件
  jsconfig.json       js配置文件
  package-lock.json   
  pachage.json        项目配置文件
  vue.config.js       vue-cli 配置文件

6. App.vue
  需要安装 Vetur 插件
  分为3部分：
    template  结构
    scripts   行为
    style     样式 ( 让组件支持less，需要装包)
      (1) 让style支持less
      a. 给style加上 lang='less'
      b. 安装依赖包 less less-loader
      c. 安装插件语法 yarn add less less-loader -D

6.组件生成快捷键 ‘<vue 按 tab 键’
     1.如果tab快捷键不生效，在vscode设置里搜索'trigger expansion on tab' -> 勾选即可

7.组件里的 style 是全局作用域
  scoped 是控制style为局部作用域
  <style scoped> 
      样式....
  </style>

8.组件里的 data是函数
   // data是一个函数，保证每个组件实例，维护独立的数据
  data(){
    return{
      count:5
    }
  },

9.不同组件之间的关系
    父子关系
        props    父传子
	（1）父级通过data创建参数：data(){return{myTitle:'黑马程序员'}}
	（2）父级在引用子级组件时通过设置属性传递参数：:title=''myTitle''
	（3）子级通过props获取父级传递的参数，props:['title',]
	（4）子级引用参数 {{title}}
        $emit    子传父
	（1）父级在引用子级元素 添加传递参数后，设置监听函数 @changeTitle="handleChange"
		changeTitle：子级的调用函数
		handleChange：父级根据自己传参实行的处理函数
	（2）父级添加处理函数 ：
		methods:{
		    handleChange(newdatas){
		       this.oldDatas =  newdatas
		    },
		}
	（3）子级通过点击事件触发 父级的修改函数
		methods:{
			changeFn(){
			   // 通过$emit('父级监听函数名','修改的值') 向父级发送消息通知
			   this.$emit('changeTitle','修改后的值')
			}
		}
    非父子关系